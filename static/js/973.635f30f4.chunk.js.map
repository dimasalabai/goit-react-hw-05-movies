{"version":3,"file":"static/js/973.635f30f4.chunk.js","mappings":"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","sources":["api/movies.js","webpack://react-homework-template/./src/pages/Home/home.module.css?7b1b","webpack://react-homework-template/./src/components/TrendingMovie/trending-movie.module.css?81bb","components/TrendingMovie/TrendingMovie.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org',\n  params: {\n    api_key: '68860e7024beff1d4722639f018ec6ec',\n  },\n});\n\nexport const getAllMovies = () => {\n  return instance.get('/3/trending/movie/day');\n};\n\nexport const getCurrentMovie = id => {\n  return instance.get(`/3/movie/${id}`);\n};\n\nexport const getSearchMovie = search => {\n  return instance.get(`/3/search/movie`, {\n    params: {\n      query: search,\n      page: 1,\n    },\n  });\n};\n\nexport const getCats = id => {\n  return instance.get(`/3/movie/${id}/credits`);\n};\n\nexport const getReviews = id => {\n  return instance.get(`/3/movie/${id}/reviews`);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"home_container__pD8t1\",\"title\":\"home_title__MzCla\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"trending-movie_list__pmQRb\",\"item\":\"trending-movie_item__hbCTb\",\"link\":\"trending-movie_link__6mOU5\",\"movieImg\":\"trending-movie_movieImg__Bo4fn\"};","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Loader from 'components/Loader/Loader';\n\nimport styles from './trending-movie.module.css';\n\nimport { getAllMovies } from 'api/movies';\n\nconst TrendingMovie = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        setLoading(true);\n        const {\n          data: { results },\n        } = await getAllMovies();\n\n        setMovies(results?.length ? results : []);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  const elements = movies.map(({ id, title, poster_path }) => (\n    <li key={id} className={styles.item}>\n      <img\n        src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n        alt=\"\"\n        className={styles.movieImg}\n      />\n      <Link\n        state={{ from: location }}\n        to={`/movies/${id}`}\n        className={styles.link}\n      >\n        <p className={styles.title}>{title}</p>\n      </Link>\n    </li>\n  ));\n\n  return (\n    <>\n      {error && <p className={styles.error}>{error}</p>}\n      {loading && <Loader />}\n      {!!elements.length && <ul className={styles.list}>{elements}</ul>}\n    </>\n  );\n};\nexport default TrendingMovie;\n","import styles from './home.module.css';\nimport TrendingMovie from 'components/TrendingMovie/TrendingMovie';\n\nconst Home = () => {\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Treading movie</h1>\n      <TrendingMovie />\n    </div>\n  );\n};\nexport default Home;\n"],"names":["instance","axios","baseURL","params","api_key","getAllMovies","get","getCurrentMovie","id","concat","getSearchMovie","search","query","page","getCats","getReviews","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","location","useLocation","useEffect","fetchPosts","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getAllMovies","results","_context","prev","next","sent","data","length","t0","message","finish","stop","apply","arguments","elements","map","_ref2","title","poster_path","_jsxs","className","styles","children","_jsx","src","alt","Link","state","from","to","_Fragment","Loader","TrendingMovie"],"sourceRoot":""}